<?php

/**
 * SearchApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Nuitee
 * @author   Konfig
 * @link     https://konfigthis.com
 */

/**
 * Lite API
 *
 * lite api hotel booking api
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://konfigthis.com
 */


namespace Nuitee\Test\Api;

use \Nuitee\Configuration;
use \Nuitee\ApiException;
use \Nuitee\ObjectSerializer;
use PHPUnit\Framework\TestCase;

class SearchApiTest extends TestCase
{

    protected \Nuitee\Api\SearchApi $api;
    /**
     * 
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
        $apiKey = getenv("NUITEE_API_KEY");
        $config = \Nuitee\Configuration::getDefaultConfiguration()->setApiKey('X-API-Key', $apiKey);
        $this->api = new \Nuitee\Api\SearchApi($config);
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getHotelRates
     *
     * Hotel full rate availability.
     *
     */
    public function testGetHotelRates()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHotels
     *
     * Hotel minimum rate availability.
     *
     */
    public function testGetHotels()
    {
        $this->markTestSkipped('Currently not working');
        $response = $this->api->getHotels(
            hotel_ids: "1000018,26191,248093,57871,268206,28906,497829,436827,1000091,1000876,1001301,1001325,1001464,99249,99122,99121,99119",
            checkin: strtotime("2025-01-01"),
            checkout: strtotime("2025-01-25"),
            country: "US",
            adults: 1,
            currency: "USD",
            guest_nationality: "US",
        );
        $this->assertNotNull(
            $response,
            "response is null"
        );
    }
}

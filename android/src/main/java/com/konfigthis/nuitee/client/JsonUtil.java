/**
 * Lite API
 * lite api hotel booking api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * https://konfigthis.com
 * Do not edit the class manually.
 */

package com.konfigthis.nuitee.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import com.konfigthis.nuitee.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("Book400Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<Book400Response>>(){}.getType();
    }
    
    if ("Book400ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<List<Book400ResponseError>>(){}.getType();
    }
    
    if ("Book401Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<Book401Response>>(){}.getType();
    }
    
    if ("Book500Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<Book500Response>>(){}.getType();
    }
    
    if ("BookRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookRequest>>(){}.getType();
    }
    
    if ("BookRequestGuestInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookRequestGuestInfo>>(){}.getType();
    }
    
    if ("BookResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponse>>(){}.getType();
    }
    
    if ("BookResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseData>>(){}.getType();
    }
    
    if ("BookResponseDataBookedRoomsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataBookedRoomsInner>>(){}.getType();
    }
    
    if ("BookResponseDataBookedRoomsInnerRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataBookedRoomsInnerRate>>(){}.getType();
    }
    
    if ("BookResponseDataBookedRoomsInnerRateRetailRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataBookedRoomsInnerRateRetailRate>>(){}.getType();
    }
    
    if ("BookResponseDataBookedRoomsInnerRoomType".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataBookedRoomsInnerRoomType>>(){}.getType();
    }
    
    if ("BookResponseDataCancellation".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataCancellation>>(){}.getType();
    }
    
    if ("BookResponseDataCancellationFee".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataCancellationFee>>(){}.getType();
    }
    
    if ("BookResponseDataCancellationPolicies".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataCancellationPolicies>>(){}.getType();
    }
    
    if ("BookResponseDataGuestInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataGuestInfo>>(){}.getType();
    }
    
    if ("BookResponseDataHotel".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataHotel>>(){}.getType();
    }
    
    if ("BookResponseDataHotelAddress".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataHotelAddress>>(){}.getType();
    }
    
    if ("BookResponseDataHotelLocation".equalsIgnoreCase(className)) {
      return new TypeToken<List<BookResponseDataHotelLocation>>(){}.getType();
    }
    
    if ("Cancel400Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<Cancel400Response>>(){}.getType();
    }
    
    if ("Cancel400ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<List<Cancel400ResponseError>>(){}.getType();
    }
    
    if ("Cancel401Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<Cancel401Response>>(){}.getType();
    }
    
    if ("Cancel500Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<Cancel500Response>>(){}.getType();
    }
    
    if ("CancelResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CancelResponse>>(){}.getType();
    }
    
    if ("GetHotelRates400Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRates400Response>>(){}.getType();
    }
    
    if ("GetHotelRates401Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRates401Response>>(){}.getType();
    }
    
    if ("GetHotelRatesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRatesResponse>>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRatesResponseDataInner>>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRatesResponseDataInnerRoomTypesInner>>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner>>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerCancellationPolicies".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerCancellationPolicies>>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner>>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRate>>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTaxesAndFeesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTaxesAndFeesInner>>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner>>(){}.getType();
    }
    
    if ("GetHotels400Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotels400Response>>(){}.getType();
    }
    
    if ("GetHotels400ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotels400ResponseError>>(){}.getType();
    }
    
    if ("GetHotels401Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotels401Response>>(){}.getType();
    }
    
    if ("GetHotels401ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotels401ResponseError>>(){}.getType();
    }
    
    if ("GetHotelsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelsResponse>>(){}.getType();
    }
    
    if ("GetHotelsResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHotelsResponseDataInner>>(){}.getType();
    }
    
    if ("ListBookingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListBookingsResponse>>(){}.getType();
    }
    
    if ("ListBookingsResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListBookingsResponseDataInner>>(){}.getType();
    }
    
    if ("ListCitiesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCitiesResponse>>(){}.getType();
    }
    
    if ("ListCitiesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCitiesResponseDataInner>>(){}.getType();
    }
    
    if ("ListCountriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCountriesResponse>>(){}.getType();
    }
    
    if ("ListCountriesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCountriesResponseDataInner>>(){}.getType();
    }
    
    if ("ListCurrenciesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCurrenciesResponse>>(){}.getType();
    }
    
    if ("ListCurrenciesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCurrenciesResponseDataInner>>(){}.getType();
    }
    
    if ("ListHotels400Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListHotels400Response>>(){}.getType();
    }
    
    if ("ListHotels401Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListHotels401Response>>(){}.getType();
    }
    
    if ("ListHotelsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListHotelsResponse>>(){}.getType();
    }
    
    if ("ListHotelsResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListHotelsResponseDataInner>>(){}.getType();
    }
    
    if ("ListIataCodesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListIataCodesResponse>>(){}.getType();
    }
    
    if ("ListIataCodesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListIataCodesResponseDataInner>>(){}.getType();
    }
    
    if ("Prebook401Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<Prebook401Response>>(){}.getType();
    }
    
    if ("PrebookRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<PrebookRequest>>(){}.getType();
    }
    
    if ("PrebookResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<PrebookResponse>>(){}.getType();
    }
    
    if ("PrebookResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<List<PrebookResponseData>>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<PrebookResponseDataRoomTypesInner>>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInnerRatesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<PrebookResponseDataRoomTypesInnerRatesInner>>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInnerRatesInnerCancellationPolicies".equalsIgnoreCase(className)) {
      return new TypeToken<List<PrebookResponseDataRoomTypesInnerRatesInnerCancellationPolicies>>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner>>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInnerRatesInnerRetailRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<PrebookResponseDataRoomTypesInnerRatesInnerRetailRate>>(){}.getType();
    }
    
    if ("Retrieve400Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<Retrieve400Response>>(){}.getType();
    }
    
    if ("Retrieve400ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<List<Retrieve400ResponseError>>(){}.getType();
    }
    
    if ("RetrieveResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<RetrieveResponse>>(){}.getType();
    }
    
    if ("RetrieveResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<List<RetrieveResponseData>>(){}.getType();
    }
    
    if ("RetrieveResponseDataBookedRoomsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<RetrieveResponseDataBookedRoomsInner>>(){}.getType();
    }
    
    if ("RetrieveResponseDataBookedRoomsInnerRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<RetrieveResponseDataBookedRoomsInnerRate>>(){}.getType();
    }
    
    if ("RetrieveResponseDataBookedRoomsInnerRoomType".equalsIgnoreCase(className)) {
      return new TypeToken<List<RetrieveResponseDataBookedRoomsInnerRoomType>>(){}.getType();
    }
    
    if ("RetrieveResponseDataCancellationPolicies".equalsIgnoreCase(className)) {
      return new TypeToken<List<RetrieveResponseDataCancellationPolicies>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("Book400Response".equalsIgnoreCase(className)) {
      return new TypeToken<Book400Response>(){}.getType();
    }
    
    if ("Book400ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<Book400ResponseError>(){}.getType();
    }
    
    if ("Book401Response".equalsIgnoreCase(className)) {
      return new TypeToken<Book401Response>(){}.getType();
    }
    
    if ("Book500Response".equalsIgnoreCase(className)) {
      return new TypeToken<Book500Response>(){}.getType();
    }
    
    if ("BookRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BookRequest>(){}.getType();
    }
    
    if ("BookRequestGuestInfo".equalsIgnoreCase(className)) {
      return new TypeToken<BookRequestGuestInfo>(){}.getType();
    }
    
    if ("BookResponse".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponse>(){}.getType();
    }
    
    if ("BookResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseData>(){}.getType();
    }
    
    if ("BookResponseDataBookedRoomsInner".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataBookedRoomsInner>(){}.getType();
    }
    
    if ("BookResponseDataBookedRoomsInnerRate".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataBookedRoomsInnerRate>(){}.getType();
    }
    
    if ("BookResponseDataBookedRoomsInnerRateRetailRate".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataBookedRoomsInnerRateRetailRate>(){}.getType();
    }
    
    if ("BookResponseDataBookedRoomsInnerRoomType".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataBookedRoomsInnerRoomType>(){}.getType();
    }
    
    if ("BookResponseDataCancellation".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataCancellation>(){}.getType();
    }
    
    if ("BookResponseDataCancellationFee".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataCancellationFee>(){}.getType();
    }
    
    if ("BookResponseDataCancellationPolicies".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataCancellationPolicies>(){}.getType();
    }
    
    if ("BookResponseDataGuestInfo".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataGuestInfo>(){}.getType();
    }
    
    if ("BookResponseDataHotel".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataHotel>(){}.getType();
    }
    
    if ("BookResponseDataHotelAddress".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataHotelAddress>(){}.getType();
    }
    
    if ("BookResponseDataHotelLocation".equalsIgnoreCase(className)) {
      return new TypeToken<BookResponseDataHotelLocation>(){}.getType();
    }
    
    if ("Cancel400Response".equalsIgnoreCase(className)) {
      return new TypeToken<Cancel400Response>(){}.getType();
    }
    
    if ("Cancel400ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<Cancel400ResponseError>(){}.getType();
    }
    
    if ("Cancel401Response".equalsIgnoreCase(className)) {
      return new TypeToken<Cancel401Response>(){}.getType();
    }
    
    if ("Cancel500Response".equalsIgnoreCase(className)) {
      return new TypeToken<Cancel500Response>(){}.getType();
    }
    
    if ("CancelResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CancelResponse>(){}.getType();
    }
    
    if ("GetHotelRates400Response".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRates400Response>(){}.getType();
    }
    
    if ("GetHotelRates401Response".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRates401Response>(){}.getType();
    }
    
    if ("GetHotelRatesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRatesResponse>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRatesResponseDataInner>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRatesResponseDataInnerRoomTypesInner>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerCancellationPolicies".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerCancellationPolicies>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRate".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRate>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTaxesAndFeesInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTaxesAndFeesInner>(){}.getType();
    }
    
    if ("GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner>(){}.getType();
    }
    
    if ("GetHotels400Response".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotels400Response>(){}.getType();
    }
    
    if ("GetHotels400ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotels400ResponseError>(){}.getType();
    }
    
    if ("GetHotels401Response".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotels401Response>(){}.getType();
    }
    
    if ("GetHotels401ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotels401ResponseError>(){}.getType();
    }
    
    if ("GetHotelsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelsResponse>(){}.getType();
    }
    
    if ("GetHotelsResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetHotelsResponseDataInner>(){}.getType();
    }
    
    if ("ListBookingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ListBookingsResponse>(){}.getType();
    }
    
    if ("ListBookingsResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<ListBookingsResponseDataInner>(){}.getType();
    }
    
    if ("ListCitiesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ListCitiesResponse>(){}.getType();
    }
    
    if ("ListCitiesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<ListCitiesResponseDataInner>(){}.getType();
    }
    
    if ("ListCountriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ListCountriesResponse>(){}.getType();
    }
    
    if ("ListCountriesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<ListCountriesResponseDataInner>(){}.getType();
    }
    
    if ("ListCurrenciesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ListCurrenciesResponse>(){}.getType();
    }
    
    if ("ListCurrenciesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<ListCurrenciesResponseDataInner>(){}.getType();
    }
    
    if ("ListHotels400Response".equalsIgnoreCase(className)) {
      return new TypeToken<ListHotels400Response>(){}.getType();
    }
    
    if ("ListHotels401Response".equalsIgnoreCase(className)) {
      return new TypeToken<ListHotels401Response>(){}.getType();
    }
    
    if ("ListHotelsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ListHotelsResponse>(){}.getType();
    }
    
    if ("ListHotelsResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<ListHotelsResponseDataInner>(){}.getType();
    }
    
    if ("ListIataCodesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ListIataCodesResponse>(){}.getType();
    }
    
    if ("ListIataCodesResponseDataInner".equalsIgnoreCase(className)) {
      return new TypeToken<ListIataCodesResponseDataInner>(){}.getType();
    }
    
    if ("Prebook401Response".equalsIgnoreCase(className)) {
      return new TypeToken<Prebook401Response>(){}.getType();
    }
    
    if ("PrebookRequest".equalsIgnoreCase(className)) {
      return new TypeToken<PrebookRequest>(){}.getType();
    }
    
    if ("PrebookResponse".equalsIgnoreCase(className)) {
      return new TypeToken<PrebookResponse>(){}.getType();
    }
    
    if ("PrebookResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<PrebookResponseData>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInner".equalsIgnoreCase(className)) {
      return new TypeToken<PrebookResponseDataRoomTypesInner>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInnerRatesInner".equalsIgnoreCase(className)) {
      return new TypeToken<PrebookResponseDataRoomTypesInnerRatesInner>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInnerRatesInnerCancellationPolicies".equalsIgnoreCase(className)) {
      return new TypeToken<PrebookResponseDataRoomTypesInnerRatesInnerCancellationPolicies>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner".equalsIgnoreCase(className)) {
      return new TypeToken<PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner>(){}.getType();
    }
    
    if ("PrebookResponseDataRoomTypesInnerRatesInnerRetailRate".equalsIgnoreCase(className)) {
      return new TypeToken<PrebookResponseDataRoomTypesInnerRatesInnerRetailRate>(){}.getType();
    }
    
    if ("Retrieve400Response".equalsIgnoreCase(className)) {
      return new TypeToken<Retrieve400Response>(){}.getType();
    }
    
    if ("Retrieve400ResponseError".equalsIgnoreCase(className)) {
      return new TypeToken<Retrieve400ResponseError>(){}.getType();
    }
    
    if ("RetrieveResponse".equalsIgnoreCase(className)) {
      return new TypeToken<RetrieveResponse>(){}.getType();
    }
    
    if ("RetrieveResponseData".equalsIgnoreCase(className)) {
      return new TypeToken<RetrieveResponseData>(){}.getType();
    }
    
    if ("RetrieveResponseDataBookedRoomsInner".equalsIgnoreCase(className)) {
      return new TypeToken<RetrieveResponseDataBookedRoomsInner>(){}.getType();
    }
    
    if ("RetrieveResponseDataBookedRoomsInnerRate".equalsIgnoreCase(className)) {
      return new TypeToken<RetrieveResponseDataBookedRoomsInnerRate>(){}.getType();
    }
    
    if ("RetrieveResponseDataBookedRoomsInnerRoomType".equalsIgnoreCase(className)) {
      return new TypeToken<RetrieveResponseDataBookedRoomsInnerRoomType>(){}.getType();
    }
    
    if ("RetrieveResponseDataCancellationPolicies".equalsIgnoreCase(className)) {
      return new TypeToken<RetrieveResponseDataCancellationPolicies>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};

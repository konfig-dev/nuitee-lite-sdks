/**
 * Lite API
 * lite api hotel booking api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * https://konfigthis.com
 * Do not edit the class manually.
 */


package com.konfigthis.nuitee.client.api;

import com.konfigthis.nuitee.client.ApiException;
import java.math.BigDecimal;
import java.util.Date;
import com.konfigthis.nuitee.client.model.GetHotelRates400Response;
import com.konfigthis.nuitee.client.model.GetHotelRates401Response;
import com.konfigthis.nuitee.client.model.GetHotelRatesResponse;
import com.konfigthis.nuitee.client.model.GetHotels400Response;
import com.konfigthis.nuitee.client.model.GetHotels401Response;
import com.konfigthis.nuitee.client.model.GetHotelsResponse;
import org.junit.Ignore;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
@Ignore
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    /**
     * Hotel full rate availability
     *
     * This endpoint allows you to send a hotel ID with a specific date range and in response receive all the rooms, rates that are available along with the cancelllation policies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHotelRatesTest() throws Exception {
        String hotelIds = null;
        Date checkin = null;
        Date checkout = null;
        Integer adults = null;
        String guestNationality = null;
        String currency = null;
        String children = null;
        String sessionId = null;
        String travelerId = null;
        GetHotelRatesResponse response = api.getHotelRates(hotelIds, checkin, checkout, adults, guestNationality, currency, children, sessionId, travelerId);
        // TODO: test validations
    }

    /**
     * Hotel minimum rate availability
     *
     * This endpoint allows you to send a list of hotel ID&#39;s for a specific date range and in response receive the best rate available for each of the hotel ID&#39;s. The limit is set to 200 hotels
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHotelsTest() throws Exception {
        String hotelIds = null;
        Date checkin = null;
        Date checkout = null;
        String country = null;
        Integer adults = null;
        String currency = null;
        String guestNationality = null;
        BigDecimal latitude = null;
        BigDecimal longitude = null;
        Integer distance = null;
        String children = null;
        String travelerId = null;
        GetHotelsResponse response = api.getHotels(hotelIds, checkin, checkout, country, adults, currency, guestNationality, latitude, longitude, distance, children, travelerId);
        // TODO: test validations
    }

}

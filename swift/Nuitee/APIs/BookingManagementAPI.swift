//
// BookingManagementAPI.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BookingManagementAPI {

    /**
     Booking cancel
     
     - parameter bookingId: (path) (Required) The unique identifier of the booking you would like to update. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func cancel(bookingId: String, apiResponseQueue: DispatchQueue = NuiteeAPI.apiResponseQueue, completion: @escaping ((_ data: CancelResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return cancelWithRequestBuilder(bookingId: bookingId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Booking cancel
     - PUT /bookings/{bookingId}
     - This endpoint allows you to cancel a booking based on a booking ID. The refund amount is based on the cancellation policies. <!-- theme: danger -->
     - API Key:
       - type: apiKey X-API-Key 
       - name: ApiKeyAuth
     - parameter bookingId: (path) (Required) The unique identifier of the booking you would like to update. 
     - returns: RequestBuilder<CancelResponse> 
     */
    open class func cancelWithRequestBuilder(bookingId: String) -> RequestBuilder<CancelResponse> {
        var localVariablePath = "/bookings/{bookingId}"
        let bookingIdPreEscape = "\(APIHelper.mapValueToPathItem(bookingId))"
        let bookingIdPostEscape = bookingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{bookingId}", with: bookingIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = NuiteeAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CancelResponse>.Type = NuiteeAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Booking list
     
     - parameter guestId: (query) guest id of bookings 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listBookings(guestId: String, apiResponseQueue: DispatchQueue = NuiteeAPI.apiResponseQueue, completion: @escaping ((_ data: ListBookingsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listBookingsWithRequestBuilder(guestId: guestId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Booking list
     - GET /bookings
     - List bookings by guestId
     - API Key:
       - type: apiKey X-API-Key 
       - name: ApiKeyAuth
     - parameter guestId: (query) guest id of bookings 
     - returns: RequestBuilder<ListBookingsResponse> 
     */
    open class func listBookingsWithRequestBuilder(guestId: String) -> RequestBuilder<ListBookingsResponse> {
        let localVariablePath = "/bookings"
        let localVariableURLString = NuiteeAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "guestId": (wrappedValue: guestId.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListBookingsResponse>.Type = NuiteeAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Booking retrieve
     
     - parameter bookingId: (path) (Required) The unique identifier of the booking you would like to update. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func retrieve(bookingId: String, apiResponseQueue: DispatchQueue = NuiteeAPI.apiResponseQueue, completion: @escaping ((_ data: RetrieveResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return retrieveWithRequestBuilder(bookingId: bookingId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Booking retrieve
     - GET /bookings/{bookingId}
     - This endpoint allows you to retrieve all the information for specific booking ID.
     - API Key:
       - type: apiKey X-API-Key 
       - name: ApiKeyAuth
     - parameter bookingId: (path) (Required) The unique identifier of the booking you would like to update. 
     - returns: RequestBuilder<RetrieveResponse> 
     */
    open class func retrieveWithRequestBuilder(bookingId: String) -> RequestBuilder<RetrieveResponse> {
        var localVariablePath = "/bookings/{bookingId}"
        let bookingIdPreEscape = "\(APIHelper.mapValueToPathItem(bookingId))"
        let bookingIdPostEscape = bookingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{bookingId}", with: bookingIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = NuiteeAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RetrieveResponse>.Type = NuiteeAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}

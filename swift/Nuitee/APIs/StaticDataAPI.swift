//
// StaticDataAPI.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class StaticDataAPI {

    /**
     City list
     
     - parameter countryCode: (query) country code, example \&quot;IT\&quot; (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listCities(countryCode: String? = nil, apiResponseQueue: DispatchQueue = NuiteeAPI.apiResponseQueue, completion: @escaping ((_ data: ListCitiesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listCitiesWithRequestBuilder(countryCode: countryCode).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     City list
     - GET /data/cities
     - 
     - API Key:
       - type: apiKey X-API-Key 
       - name: ApiKeyAuth
     - parameter countryCode: (query) country code, example \&quot;IT\&quot; (optional)
     - returns: RequestBuilder<ListCitiesResponse> 
     */
    open class func listCitiesWithRequestBuilder(countryCode: String? = nil) -> RequestBuilder<ListCitiesResponse> {
        let localVariablePath = "/data/cities"
        let localVariableURLString = NuiteeAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "countryCode": (wrappedValue: countryCode?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListCitiesResponse>.Type = NuiteeAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Country list
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listCountries(apiResponseQueue: DispatchQueue = NuiteeAPI.apiResponseQueue, completion: @escaping ((_ data: ListCountriesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listCountriesWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Country list
     - GET /data/countries
     - countries list
     - API Key:
       - type: apiKey X-API-Key 
       - name: ApiKeyAuth
     - returns: RequestBuilder<ListCountriesResponse> 
     */
    open class func listCountriesWithRequestBuilder() -> RequestBuilder<ListCountriesResponse> {
        let localVariablePath = "/data/countries"
        let localVariableURLString = NuiteeAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListCountriesResponse>.Type = NuiteeAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Currency list
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listCurrencies(apiResponseQueue: DispatchQueue = NuiteeAPI.apiResponseQueue, completion: @escaping ((_ data: ListCurrenciesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listCurrenciesWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Currency list
     - GET /data/currencies
     - API Key:
       - type: apiKey X-API-Key 
       - name: ApiKeyAuth
     - returns: RequestBuilder<ListCurrenciesResponse> 
     */
    open class func listCurrenciesWithRequestBuilder() -> RequestBuilder<ListCurrenciesResponse> {
        let localVariablePath = "/data/currencies"
        let localVariableURLString = NuiteeAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListCurrenciesResponse>.Type = NuiteeAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Hotel list
     
     - parameter countryCode: (query) country code Alpha-2 code (example US, RU, CN) 
     - parameter hotelName: (query) hotel name (optional)
     - parameter cityName: (query) city name (optional)
     - parameter limit: (query) limit results (max value 1000) (optional)
     - parameter offset: (query) results offset (optional)
     - parameter latitude: (query) latitude geo coordinates (optional)
     - parameter longitude: (query) longtude geo coordinates (optional)
     - parameter distance: (query) the distance starting from the selected geopgraphic point (optional)
     - parameter iataCode: (query) airport iata code (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listHotels(countryCode: String, hotelName: String? = nil, cityName: String? = nil, limit: Int? = nil, offset: Int? = nil, latitude: Double? = nil, longitude: Double? = nil, distance: Int? = nil, iataCode: String? = nil, apiResponseQueue: DispatchQueue = NuiteeAPI.apiResponseQueue, completion: @escaping ((_ data: ListHotelsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listHotelsWithRequestBuilder(countryCode: countryCode, hotelName: hotelName, cityName: cityName, limit: limit, offset: offset, latitude: latitude, longitude: longitude, distance: distance, iataCode: iataCode).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Hotel list
     - GET /data/hotels
     - 
     - API Key:
       - type: apiKey X-API-Key 
       - name: ApiKeyAuth
     - parameter countryCode: (query) country code Alpha-2 code (example US, RU, CN) 
     - parameter hotelName: (query) hotel name (optional)
     - parameter cityName: (query) city name (optional)
     - parameter limit: (query) limit results (max value 1000) (optional)
     - parameter offset: (query) results offset (optional)
     - parameter latitude: (query) latitude geo coordinates (optional)
     - parameter longitude: (query) longtude geo coordinates (optional)
     - parameter distance: (query) the distance starting from the selected geopgraphic point (optional)
     - parameter iataCode: (query) airport iata code (optional)
     - returns: RequestBuilder<ListHotelsResponse> 
     */
    open class func listHotelsWithRequestBuilder(countryCode: String, hotelName: String? = nil, cityName: String? = nil, limit: Int? = nil, offset: Int? = nil, latitude: Double? = nil, longitude: Double? = nil, distance: Int? = nil, iataCode: String? = nil) -> RequestBuilder<ListHotelsResponse> {
        let localVariablePath = "/data/hotels"
        let localVariableURLString = NuiteeAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "hotelName": (wrappedValue: hotelName?.encodeToJSON(), isExplode: true),
            "cityName": (wrappedValue: cityName?.encodeToJSON(), isExplode: true),
            "countryCode": (wrappedValue: countryCode.encodeToJSON(), isExplode: true),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
            "offset": (wrappedValue: offset?.encodeToJSON(), isExplode: true),
            "latitude": (wrappedValue: latitude?.encodeToJSON(), isExplode: true),
            "longitude": (wrappedValue: longitude?.encodeToJSON(), isExplode: true),
            "distance": (wrappedValue: distance?.encodeToJSON(), isExplode: true),
            "iataCode": (wrappedValue: iataCode?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListHotelsResponse>.Type = NuiteeAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     IATA code list
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listIataCodes(apiResponseQueue: DispatchQueue = NuiteeAPI.apiResponseQueue, completion: @escaping ((_ data: ListIataCodesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listIataCodesWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     IATA code list
     - GET /data/iataCodes
     - IATA codes list
     - API Key:
       - type: apiKey X-API-Key 
       - name: ApiKeyAuth
     - returns: RequestBuilder<ListIataCodesResponse> 
     */
    open class func listIataCodesWithRequestBuilder() -> RequestBuilder<ListIataCodesResponse> {
        let localVariablePath = "/data/iataCodes"
        let localVariableURLString = NuiteeAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListIataCodesResponse>.Type = NuiteeAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}

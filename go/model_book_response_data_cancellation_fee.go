/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseDataCancellationFee struct for BookResponseDataCancellationFee
type BookResponseDataCancellationFee struct {
	Type *string `json:"type,omitempty"`
	Count *int32 `json:"count,omitempty"`
	Price *GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner `json:"price,omitempty"`
}

// NewBookResponseDataCancellationFee instantiates a new BookResponseDataCancellationFee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseDataCancellationFee() *BookResponseDataCancellationFee {
	this := BookResponseDataCancellationFee{}
	return &this
}

// NewBookResponseDataCancellationFeeWithDefaults instantiates a new BookResponseDataCancellationFee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataCancellationFeeWithDefaults() *BookResponseDataCancellationFee {
	this := BookResponseDataCancellationFee{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BookResponseDataCancellationFee) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataCancellationFee) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BookResponseDataCancellationFee) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BookResponseDataCancellationFee) SetType(v string) {
	o.Type = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *BookResponseDataCancellationFee) GetCount() int32 {
	if o == nil || isNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataCancellationFee) GetCountOk() (*int32, bool) {
	if o == nil || isNil(o.Count) {
    return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *BookResponseDataCancellationFee) HasCount() bool {
	if o != nil && !isNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *BookResponseDataCancellationFee) SetCount(v int32) {
	o.Count = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *BookResponseDataCancellationFee) GetPrice() GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner {
	if o == nil || isNil(o.Price) {
		var ret GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataCancellationFee) GetPriceOk() (*GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner, bool) {
	if o == nil || isNil(o.Price) {
    return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *BookResponseDataCancellationFee) HasPrice() bool {
	if o != nil && !isNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner and assigns it to the Price field.
func (o *BookResponseDataCancellationFee) SetPrice(v GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner) {
	o.Price = &v
}

func (o BookResponseDataCancellationFee) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !isNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseDataCancellationFee struct {
	value *BookResponseDataCancellationFee
	isSet bool
}

func (v NullableBookResponseDataCancellationFee) Get() *BookResponseDataCancellationFee {
	return v.value
}

func (v *NullableBookResponseDataCancellationFee) Set(val *BookResponseDataCancellationFee) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseDataCancellationFee) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseDataCancellationFee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseDataCancellationFee(val *BookResponseDataCancellationFee) *NullableBookResponseDataCancellationFee {
	return &NullableBookResponseDataCancellationFee{value: val, isSet: true}
}

func (v NullableBookResponseDataCancellationFee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseDataCancellationFee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



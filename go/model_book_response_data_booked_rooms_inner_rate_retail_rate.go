/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseDataBookedRoomsInnerRateRetailRate struct for BookResponseDataBookedRoomsInnerRateRetailRate
type BookResponseDataBookedRoomsInnerRateRetailRate struct {
	Total *GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner `json:"total,omitempty"`
}

// NewBookResponseDataBookedRoomsInnerRateRetailRate instantiates a new BookResponseDataBookedRoomsInnerRateRetailRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseDataBookedRoomsInnerRateRetailRate() *BookResponseDataBookedRoomsInnerRateRetailRate {
	this := BookResponseDataBookedRoomsInnerRateRetailRate{}
	return &this
}

// NewBookResponseDataBookedRoomsInnerRateRetailRateWithDefaults instantiates a new BookResponseDataBookedRoomsInnerRateRetailRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataBookedRoomsInnerRateRetailRateWithDefaults() *BookResponseDataBookedRoomsInnerRateRetailRate {
	this := BookResponseDataBookedRoomsInnerRateRetailRate{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *BookResponseDataBookedRoomsInnerRateRetailRate) GetTotal() GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner {
	if o == nil || isNil(o.Total) {
		var ret GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataBookedRoomsInnerRateRetailRate) GetTotalOk() (*GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner, bool) {
	if o == nil || isNil(o.Total) {
    return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *BookResponseDataBookedRoomsInnerRateRetailRate) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner and assigns it to the Total field.
func (o *BookResponseDataBookedRoomsInnerRateRetailRate) SetTotal(v GetHotelRatesResponseDataInnerRoomTypesInnerRatesInnerRetailRateTotalInner) {
	o.Total = &v
}

func (o BookResponseDataBookedRoomsInnerRateRetailRate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseDataBookedRoomsInnerRateRetailRate struct {
	value *BookResponseDataBookedRoomsInnerRateRetailRate
	isSet bool
}

func (v NullableBookResponseDataBookedRoomsInnerRateRetailRate) Get() *BookResponseDataBookedRoomsInnerRateRetailRate {
	return v.value
}

func (v *NullableBookResponseDataBookedRoomsInnerRateRetailRate) Set(val *BookResponseDataBookedRoomsInnerRateRetailRate) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseDataBookedRoomsInnerRateRetailRate) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseDataBookedRoomsInnerRateRetailRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseDataBookedRoomsInnerRateRetailRate(val *BookResponseDataBookedRoomsInnerRateRetailRate) *NullableBookResponseDataBookedRoomsInnerRateRetailRate {
	return &NullableBookResponseDataBookedRoomsInnerRateRetailRate{value: val, isSet: true}
}

func (v NullableBookResponseDataBookedRoomsInnerRateRetailRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseDataBookedRoomsInnerRateRetailRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



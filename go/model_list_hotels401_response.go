/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// ListHotels401Response struct for ListHotels401Response
type ListHotels401Response struct {
	Message *string `json:"message,omitempty"`
}

// NewListHotels401Response instantiates a new ListHotels401Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHotels401Response() *ListHotels401Response {
	this := ListHotels401Response{}
	return &this
}

// NewListHotels401ResponseWithDefaults instantiates a new ListHotels401Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHotels401ResponseWithDefaults() *ListHotels401Response {
	this := ListHotels401Response{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ListHotels401Response) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotels401Response) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ListHotels401Response) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ListHotels401Response) SetMessage(v string) {
	o.Message = &v
}

func (o ListHotels401Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableListHotels401Response struct {
	value *ListHotels401Response
	isSet bool
}

func (v NullableListHotels401Response) Get() *ListHotels401Response {
	return v.value
}

func (v *NullableListHotels401Response) Set(val *ListHotels401Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListHotels401Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListHotels401Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHotels401Response(val *ListHotels401Response) *NullableListHotels401Response {
	return &NullableListHotels401Response{value: val, isSet: true}
}

func (v NullableListHotels401Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHotels401Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// GetHotelRatesResponseDataInnerRoomTypesInner struct for GetHotelRatesResponseDataInnerRoomTypesInner
type GetHotelRatesResponseDataInnerRoomTypesInner struct {
	RoomTypeId *string `json:"roomTypeId,omitempty"`
	MaxOccupancy *int32 `json:"maxOccupancy,omitempty"`
	Rates []GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner `json:"rates,omitempty"`
}

// NewGetHotelRatesResponseDataInnerRoomTypesInner instantiates a new GetHotelRatesResponseDataInnerRoomTypesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetHotelRatesResponseDataInnerRoomTypesInner() *GetHotelRatesResponseDataInnerRoomTypesInner {
	this := GetHotelRatesResponseDataInnerRoomTypesInner{}
	return &this
}

// NewGetHotelRatesResponseDataInnerRoomTypesInnerWithDefaults instantiates a new GetHotelRatesResponseDataInnerRoomTypesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetHotelRatesResponseDataInnerRoomTypesInnerWithDefaults() *GetHotelRatesResponseDataInnerRoomTypesInner {
	this := GetHotelRatesResponseDataInnerRoomTypesInner{}
	return &this
}

// GetRoomTypeId returns the RoomTypeId field value if set, zero value otherwise.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) GetRoomTypeId() string {
	if o == nil || isNil(o.RoomTypeId) {
		var ret string
		return ret
	}
	return *o.RoomTypeId
}

// GetRoomTypeIdOk returns a tuple with the RoomTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) GetRoomTypeIdOk() (*string, bool) {
	if o == nil || isNil(o.RoomTypeId) {
    return nil, false
	}
	return o.RoomTypeId, true
}

// HasRoomTypeId returns a boolean if a field has been set.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) HasRoomTypeId() bool {
	if o != nil && !isNil(o.RoomTypeId) {
		return true
	}

	return false
}

// SetRoomTypeId gets a reference to the given string and assigns it to the RoomTypeId field.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) SetRoomTypeId(v string) {
	o.RoomTypeId = &v
}

// GetMaxOccupancy returns the MaxOccupancy field value if set, zero value otherwise.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) GetMaxOccupancy() int32 {
	if o == nil || isNil(o.MaxOccupancy) {
		var ret int32
		return ret
	}
	return *o.MaxOccupancy
}

// GetMaxOccupancyOk returns a tuple with the MaxOccupancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) GetMaxOccupancyOk() (*int32, bool) {
	if o == nil || isNil(o.MaxOccupancy) {
    return nil, false
	}
	return o.MaxOccupancy, true
}

// HasMaxOccupancy returns a boolean if a field has been set.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) HasMaxOccupancy() bool {
	if o != nil && !isNil(o.MaxOccupancy) {
		return true
	}

	return false
}

// SetMaxOccupancy gets a reference to the given int32 and assigns it to the MaxOccupancy field.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) SetMaxOccupancy(v int32) {
	o.MaxOccupancy = &v
}

// GetRates returns the Rates field value if set, zero value otherwise.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) GetRates() []GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner {
	if o == nil || isNil(o.Rates) {
		var ret []GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner
		return ret
	}
	return o.Rates
}

// GetRatesOk returns a tuple with the Rates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) GetRatesOk() ([]GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner, bool) {
	if o == nil || isNil(o.Rates) {
    return nil, false
	}
	return o.Rates, true
}

// HasRates returns a boolean if a field has been set.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) HasRates() bool {
	if o != nil && !isNil(o.Rates) {
		return true
	}

	return false
}

// SetRates gets a reference to the given []GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner and assigns it to the Rates field.
func (o *GetHotelRatesResponseDataInnerRoomTypesInner) SetRates(v []GetHotelRatesResponseDataInnerRoomTypesInnerRatesInner) {
	o.Rates = v
}

func (o GetHotelRatesResponseDataInnerRoomTypesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RoomTypeId) {
		toSerialize["roomTypeId"] = o.RoomTypeId
	}
	if !isNil(o.MaxOccupancy) {
		toSerialize["maxOccupancy"] = o.MaxOccupancy
	}
	if !isNil(o.Rates) {
		toSerialize["rates"] = o.Rates
	}
	return json.Marshal(toSerialize)
}

type NullableGetHotelRatesResponseDataInnerRoomTypesInner struct {
	value *GetHotelRatesResponseDataInnerRoomTypesInner
	isSet bool
}

func (v NullableGetHotelRatesResponseDataInnerRoomTypesInner) Get() *GetHotelRatesResponseDataInnerRoomTypesInner {
	return v.value
}

func (v *NullableGetHotelRatesResponseDataInnerRoomTypesInner) Set(val *GetHotelRatesResponseDataInnerRoomTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetHotelRatesResponseDataInnerRoomTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetHotelRatesResponseDataInnerRoomTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetHotelRatesResponseDataInnerRoomTypesInner(val *GetHotelRatesResponseDataInnerRoomTypesInner) *NullableGetHotelRatesResponseDataInnerRoomTypesInner {
	return &NullableGetHotelRatesResponseDataInnerRoomTypesInner{value: val, isSet: true}
}

func (v NullableGetHotelRatesResponseDataInnerRoomTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetHotelRatesResponseDataInnerRoomTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



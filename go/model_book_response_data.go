/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseData struct for BookResponseData
type BookResponseData struct {
	BookingId *string `json:"bookingId,omitempty"`
	Status *string `json:"status,omitempty"`
	HotelConfirmationCode *string `json:"hotelConfirmationCode,omitempty"`
	Checkin *string `json:"checkin,omitempty"`
	Checkout *string `json:"checkout,omitempty"`
	Hotel *BookResponseDataHotel `json:"hotel,omitempty"`
	BookedRooms []BookResponseDataBookedRoomsInner `json:"bookedRooms,omitempty"`
	GuestInfo *BookResponseDataGuestInfo `json:"guestInfo,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	Cancellation *BookResponseDataCancellation `json:"cancellation,omitempty"`
	CancellationPolicies *BookResponseDataCancellationPolicies `json:"cancellationPolicies,omitempty"`
	Price *float32 `json:"price,omitempty"`
}

// NewBookResponseData instantiates a new BookResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseData() *BookResponseData {
	this := BookResponseData{}
	return &this
}

// NewBookResponseDataWithDefaults instantiates a new BookResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataWithDefaults() *BookResponseData {
	this := BookResponseData{}
	return &this
}

// GetBookingId returns the BookingId field value if set, zero value otherwise.
func (o *BookResponseData) GetBookingId() string {
	if o == nil || isNil(o.BookingId) {
		var ret string
		return ret
	}
	return *o.BookingId
}

// GetBookingIdOk returns a tuple with the BookingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetBookingIdOk() (*string, bool) {
	if o == nil || isNil(o.BookingId) {
    return nil, false
	}
	return o.BookingId, true
}

// HasBookingId returns a boolean if a field has been set.
func (o *BookResponseData) HasBookingId() bool {
	if o != nil && !isNil(o.BookingId) {
		return true
	}

	return false
}

// SetBookingId gets a reference to the given string and assigns it to the BookingId field.
func (o *BookResponseData) SetBookingId(v string) {
	o.BookingId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BookResponseData) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BookResponseData) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BookResponseData) SetStatus(v string) {
	o.Status = &v
}

// GetHotelConfirmationCode returns the HotelConfirmationCode field value if set, zero value otherwise.
func (o *BookResponseData) GetHotelConfirmationCode() string {
	if o == nil || isNil(o.HotelConfirmationCode) {
		var ret string
		return ret
	}
	return *o.HotelConfirmationCode
}

// GetHotelConfirmationCodeOk returns a tuple with the HotelConfirmationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetHotelConfirmationCodeOk() (*string, bool) {
	if o == nil || isNil(o.HotelConfirmationCode) {
    return nil, false
	}
	return o.HotelConfirmationCode, true
}

// HasHotelConfirmationCode returns a boolean if a field has been set.
func (o *BookResponseData) HasHotelConfirmationCode() bool {
	if o != nil && !isNil(o.HotelConfirmationCode) {
		return true
	}

	return false
}

// SetHotelConfirmationCode gets a reference to the given string and assigns it to the HotelConfirmationCode field.
func (o *BookResponseData) SetHotelConfirmationCode(v string) {
	o.HotelConfirmationCode = &v
}

// GetCheckin returns the Checkin field value if set, zero value otherwise.
func (o *BookResponseData) GetCheckin() string {
	if o == nil || isNil(o.Checkin) {
		var ret string
		return ret
	}
	return *o.Checkin
}

// GetCheckinOk returns a tuple with the Checkin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetCheckinOk() (*string, bool) {
	if o == nil || isNil(o.Checkin) {
    return nil, false
	}
	return o.Checkin, true
}

// HasCheckin returns a boolean if a field has been set.
func (o *BookResponseData) HasCheckin() bool {
	if o != nil && !isNil(o.Checkin) {
		return true
	}

	return false
}

// SetCheckin gets a reference to the given string and assigns it to the Checkin field.
func (o *BookResponseData) SetCheckin(v string) {
	o.Checkin = &v
}

// GetCheckout returns the Checkout field value if set, zero value otherwise.
func (o *BookResponseData) GetCheckout() string {
	if o == nil || isNil(o.Checkout) {
		var ret string
		return ret
	}
	return *o.Checkout
}

// GetCheckoutOk returns a tuple with the Checkout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetCheckoutOk() (*string, bool) {
	if o == nil || isNil(o.Checkout) {
    return nil, false
	}
	return o.Checkout, true
}

// HasCheckout returns a boolean if a field has been set.
func (o *BookResponseData) HasCheckout() bool {
	if o != nil && !isNil(o.Checkout) {
		return true
	}

	return false
}

// SetCheckout gets a reference to the given string and assigns it to the Checkout field.
func (o *BookResponseData) SetCheckout(v string) {
	o.Checkout = &v
}

// GetHotel returns the Hotel field value if set, zero value otherwise.
func (o *BookResponseData) GetHotel() BookResponseDataHotel {
	if o == nil || isNil(o.Hotel) {
		var ret BookResponseDataHotel
		return ret
	}
	return *o.Hotel
}

// GetHotelOk returns a tuple with the Hotel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetHotelOk() (*BookResponseDataHotel, bool) {
	if o == nil || isNil(o.Hotel) {
    return nil, false
	}
	return o.Hotel, true
}

// HasHotel returns a boolean if a field has been set.
func (o *BookResponseData) HasHotel() bool {
	if o != nil && !isNil(o.Hotel) {
		return true
	}

	return false
}

// SetHotel gets a reference to the given BookResponseDataHotel and assigns it to the Hotel field.
func (o *BookResponseData) SetHotel(v BookResponseDataHotel) {
	o.Hotel = &v
}

// GetBookedRooms returns the BookedRooms field value if set, zero value otherwise.
func (o *BookResponseData) GetBookedRooms() []BookResponseDataBookedRoomsInner {
	if o == nil || isNil(o.BookedRooms) {
		var ret []BookResponseDataBookedRoomsInner
		return ret
	}
	return o.BookedRooms
}

// GetBookedRoomsOk returns a tuple with the BookedRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetBookedRoomsOk() ([]BookResponseDataBookedRoomsInner, bool) {
	if o == nil || isNil(o.BookedRooms) {
    return nil, false
	}
	return o.BookedRooms, true
}

// HasBookedRooms returns a boolean if a field has been set.
func (o *BookResponseData) HasBookedRooms() bool {
	if o != nil && !isNil(o.BookedRooms) {
		return true
	}

	return false
}

// SetBookedRooms gets a reference to the given []BookResponseDataBookedRoomsInner and assigns it to the BookedRooms field.
func (o *BookResponseData) SetBookedRooms(v []BookResponseDataBookedRoomsInner) {
	o.BookedRooms = v
}

// GetGuestInfo returns the GuestInfo field value if set, zero value otherwise.
func (o *BookResponseData) GetGuestInfo() BookResponseDataGuestInfo {
	if o == nil || isNil(o.GuestInfo) {
		var ret BookResponseDataGuestInfo
		return ret
	}
	return *o.GuestInfo
}

// GetGuestInfoOk returns a tuple with the GuestInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetGuestInfoOk() (*BookResponseDataGuestInfo, bool) {
	if o == nil || isNil(o.GuestInfo) {
    return nil, false
	}
	return o.GuestInfo, true
}

// HasGuestInfo returns a boolean if a field has been set.
func (o *BookResponseData) HasGuestInfo() bool {
	if o != nil && !isNil(o.GuestInfo) {
		return true
	}

	return false
}

// SetGuestInfo gets a reference to the given BookResponseDataGuestInfo and assigns it to the GuestInfo field.
func (o *BookResponseData) SetGuestInfo(v BookResponseDataGuestInfo) {
	o.GuestInfo = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BookResponseData) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BookResponseData) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *BookResponseData) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCancellation returns the Cancellation field value if set, zero value otherwise.
func (o *BookResponseData) GetCancellation() BookResponseDataCancellation {
	if o == nil || isNil(o.Cancellation) {
		var ret BookResponseDataCancellation
		return ret
	}
	return *o.Cancellation
}

// GetCancellationOk returns a tuple with the Cancellation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetCancellationOk() (*BookResponseDataCancellation, bool) {
	if o == nil || isNil(o.Cancellation) {
    return nil, false
	}
	return o.Cancellation, true
}

// HasCancellation returns a boolean if a field has been set.
func (o *BookResponseData) HasCancellation() bool {
	if o != nil && !isNil(o.Cancellation) {
		return true
	}

	return false
}

// SetCancellation gets a reference to the given BookResponseDataCancellation and assigns it to the Cancellation field.
func (o *BookResponseData) SetCancellation(v BookResponseDataCancellation) {
	o.Cancellation = &v
}

// GetCancellationPolicies returns the CancellationPolicies field value if set, zero value otherwise.
func (o *BookResponseData) GetCancellationPolicies() BookResponseDataCancellationPolicies {
	if o == nil || isNil(o.CancellationPolicies) {
		var ret BookResponseDataCancellationPolicies
		return ret
	}
	return *o.CancellationPolicies
}

// GetCancellationPoliciesOk returns a tuple with the CancellationPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetCancellationPoliciesOk() (*BookResponseDataCancellationPolicies, bool) {
	if o == nil || isNil(o.CancellationPolicies) {
    return nil, false
	}
	return o.CancellationPolicies, true
}

// HasCancellationPolicies returns a boolean if a field has been set.
func (o *BookResponseData) HasCancellationPolicies() bool {
	if o != nil && !isNil(o.CancellationPolicies) {
		return true
	}

	return false
}

// SetCancellationPolicies gets a reference to the given BookResponseDataCancellationPolicies and assigns it to the CancellationPolicies field.
func (o *BookResponseData) SetCancellationPolicies(v BookResponseDataCancellationPolicies) {
	o.CancellationPolicies = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *BookResponseData) GetPrice() float32 {
	if o == nil || isNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseData) GetPriceOk() (*float32, bool) {
	if o == nil || isNil(o.Price) {
    return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *BookResponseData) HasPrice() bool {
	if o != nil && !isNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *BookResponseData) SetPrice(v float32) {
	o.Price = &v
}

func (o BookResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BookingId) {
		toSerialize["bookingId"] = o.BookingId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.HotelConfirmationCode) {
		toSerialize["hotelConfirmationCode"] = o.HotelConfirmationCode
	}
	if !isNil(o.Checkin) {
		toSerialize["checkin"] = o.Checkin
	}
	if !isNil(o.Checkout) {
		toSerialize["checkout"] = o.Checkout
	}
	if !isNil(o.Hotel) {
		toSerialize["hotel"] = o.Hotel
	}
	if !isNil(o.BookedRooms) {
		toSerialize["bookedRooms"] = o.BookedRooms
	}
	if !isNil(o.GuestInfo) {
		toSerialize["guestInfo"] = o.GuestInfo
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.Cancellation) {
		toSerialize["cancellation"] = o.Cancellation
	}
	if !isNil(o.CancellationPolicies) {
		toSerialize["cancellationPolicies"] = o.CancellationPolicies
	}
	if !isNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseData struct {
	value *BookResponseData
	isSet bool
}

func (v NullableBookResponseData) Get() *BookResponseData {
	return v.value
}

func (v *NullableBookResponseData) Set(val *BookResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseData(val *BookResponseData) *NullableBookResponseData {
	return &NullableBookResponseData{value: val, isSet: true}
}

func (v NullableBookResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseDataCancellationPolicies struct for BookResponseDataCancellationPolicies
type BookResponseDataCancellationPolicies struct {
	CancelPolicyInfos []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner `json:"cancelPolicyInfos,omitempty"`
	HotelRemarks []string `json:"hotelRemarks,omitempty"`
	RefundableTag *string `json:"refundableTag,omitempty"`
}

// NewBookResponseDataCancellationPolicies instantiates a new BookResponseDataCancellationPolicies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseDataCancellationPolicies() *BookResponseDataCancellationPolicies {
	this := BookResponseDataCancellationPolicies{}
	return &this
}

// NewBookResponseDataCancellationPoliciesWithDefaults instantiates a new BookResponseDataCancellationPolicies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataCancellationPoliciesWithDefaults() *BookResponseDataCancellationPolicies {
	this := BookResponseDataCancellationPolicies{}
	return &this
}

// GetCancelPolicyInfos returns the CancelPolicyInfos field value if set, zero value otherwise.
func (o *BookResponseDataCancellationPolicies) GetCancelPolicyInfos() []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner {
	if o == nil || isNil(o.CancelPolicyInfos) {
		var ret []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner
		return ret
	}
	return o.CancelPolicyInfos
}

// GetCancelPolicyInfosOk returns a tuple with the CancelPolicyInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataCancellationPolicies) GetCancelPolicyInfosOk() ([]PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner, bool) {
	if o == nil || isNil(o.CancelPolicyInfos) {
    return nil, false
	}
	return o.CancelPolicyInfos, true
}

// HasCancelPolicyInfos returns a boolean if a field has been set.
func (o *BookResponseDataCancellationPolicies) HasCancelPolicyInfos() bool {
	if o != nil && !isNil(o.CancelPolicyInfos) {
		return true
	}

	return false
}

// SetCancelPolicyInfos gets a reference to the given []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner and assigns it to the CancelPolicyInfos field.
func (o *BookResponseDataCancellationPolicies) SetCancelPolicyInfos(v []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner) {
	o.CancelPolicyInfos = v
}

// GetHotelRemarks returns the HotelRemarks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResponseDataCancellationPolicies) GetHotelRemarks() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HotelRemarks
}

// GetHotelRemarksOk returns a tuple with the HotelRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResponseDataCancellationPolicies) GetHotelRemarksOk() ([]string, bool) {
	if o == nil || isNil(o.HotelRemarks) {
    return nil, false
	}
	return o.HotelRemarks, true
}

// HasHotelRemarks returns a boolean if a field has been set.
func (o *BookResponseDataCancellationPolicies) HasHotelRemarks() bool {
	if o != nil && isNil(o.HotelRemarks) {
		return true
	}

	return false
}

// SetHotelRemarks gets a reference to the given []string and assigns it to the HotelRemarks field.
func (o *BookResponseDataCancellationPolicies) SetHotelRemarks(v []string) {
	o.HotelRemarks = v
}

// GetRefundableTag returns the RefundableTag field value if set, zero value otherwise.
func (o *BookResponseDataCancellationPolicies) GetRefundableTag() string {
	if o == nil || isNil(o.RefundableTag) {
		var ret string
		return ret
	}
	return *o.RefundableTag
}

// GetRefundableTagOk returns a tuple with the RefundableTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataCancellationPolicies) GetRefundableTagOk() (*string, bool) {
	if o == nil || isNil(o.RefundableTag) {
    return nil, false
	}
	return o.RefundableTag, true
}

// HasRefundableTag returns a boolean if a field has been set.
func (o *BookResponseDataCancellationPolicies) HasRefundableTag() bool {
	if o != nil && !isNil(o.RefundableTag) {
		return true
	}

	return false
}

// SetRefundableTag gets a reference to the given string and assigns it to the RefundableTag field.
func (o *BookResponseDataCancellationPolicies) SetRefundableTag(v string) {
	o.RefundableTag = &v
}

func (o BookResponseDataCancellationPolicies) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CancelPolicyInfos) {
		toSerialize["cancelPolicyInfos"] = o.CancelPolicyInfos
	}
	if o.HotelRemarks != nil {
		toSerialize["hotelRemarks"] = o.HotelRemarks
	}
	if !isNil(o.RefundableTag) {
		toSerialize["refundableTag"] = o.RefundableTag
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseDataCancellationPolicies struct {
	value *BookResponseDataCancellationPolicies
	isSet bool
}

func (v NullableBookResponseDataCancellationPolicies) Get() *BookResponseDataCancellationPolicies {
	return v.value
}

func (v *NullableBookResponseDataCancellationPolicies) Set(val *BookResponseDataCancellationPolicies) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseDataCancellationPolicies) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseDataCancellationPolicies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseDataCancellationPolicies(val *BookResponseDataCancellationPolicies) *NullableBookResponseDataCancellationPolicies {
	return &NullableBookResponseDataCancellationPolicies{value: val, isSet: true}
}

func (v NullableBookResponseDataCancellationPolicies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseDataCancellationPolicies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// GetHotelsResponseDataInner struct for GetHotelsResponseDataInner
type GetHotelsResponseDataInner struct {
	HotelId *string `json:"hotelId,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Price *float32 `json:"price,omitempty"`
}

// NewGetHotelsResponseDataInner instantiates a new GetHotelsResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetHotelsResponseDataInner() *GetHotelsResponseDataInner {
	this := GetHotelsResponseDataInner{}
	return &this
}

// NewGetHotelsResponseDataInnerWithDefaults instantiates a new GetHotelsResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetHotelsResponseDataInnerWithDefaults() *GetHotelsResponseDataInner {
	this := GetHotelsResponseDataInner{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *GetHotelsResponseDataInner) GetHotelId() string {
	if o == nil || isNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHotelsResponseDataInner) GetHotelIdOk() (*string, bool) {
	if o == nil || isNil(o.HotelId) {
    return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *GetHotelsResponseDataInner) HasHotelId() bool {
	if o != nil && !isNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *GetHotelsResponseDataInner) SetHotelId(v string) {
	o.HotelId = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *GetHotelsResponseDataInner) GetCurrency() string {
	if o == nil || isNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHotelsResponseDataInner) GetCurrencyOk() (*string, bool) {
	if o == nil || isNil(o.Currency) {
    return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *GetHotelsResponseDataInner) HasCurrency() bool {
	if o != nil && !isNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *GetHotelsResponseDataInner) SetCurrency(v string) {
	o.Currency = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GetHotelsResponseDataInner) GetPrice() float32 {
	if o == nil || isNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHotelsResponseDataInner) GetPriceOk() (*float32, bool) {
	if o == nil || isNil(o.Price) {
    return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GetHotelsResponseDataInner) HasPrice() bool {
	if o != nil && !isNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *GetHotelsResponseDataInner) SetPrice(v float32) {
	o.Price = &v
}

func (o GetHotelsResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !isNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !isNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullableGetHotelsResponseDataInner struct {
	value *GetHotelsResponseDataInner
	isSet bool
}

func (v NullableGetHotelsResponseDataInner) Get() *GetHotelsResponseDataInner {
	return v.value
}

func (v *NullableGetHotelsResponseDataInner) Set(val *GetHotelsResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetHotelsResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetHotelsResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetHotelsResponseDataInner(val *GetHotelsResponseDataInner) *NullableGetHotelsResponseDataInner {
	return &NullableGetHotelsResponseDataInner{value: val, isSet: true}
}

func (v NullableGetHotelsResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetHotelsResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



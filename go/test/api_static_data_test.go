/*
Lite API

Testing StaticDataApiService

*/

// Code generated by Konfig (https://konfigthis.com);

package nuitee

import (
	"context"
	"os"
	"testing"

	nuitee "github.com/konfig-dev/nuitee-lite-sdks/go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_nuitee_StaticDataApiService(t *testing.T) {

	configuration := nuitee.NewConfiguration()
	apiKey := os.Getenv("NUITEE_API_KEY")
	configuration.Context = context.WithValue(configuration.Context, nuitee.ContextAPIKeys, map[string]nuitee.APIKey{
		"ApiKeyAuth": {Key: apiKey},
	})
	apiClient := nuitee.NewAPIClient(configuration)

	t.Run("Test StaticDataApiService ListCities", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.StaticDataApi.ListCities().Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StaticDataApiService ListCountries", func(t *testing.T) {

		resp, httpRes, err := apiClient.StaticDataApi.ListCountries().Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StaticDataApiService ListCurrencies", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.StaticDataApi.ListCurrencies().Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StaticDataApiService ListHotels", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.StaticDataApi.ListHotels().Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StaticDataApiService ListIataCodes", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.StaticDataApi.ListIataCodes().Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}

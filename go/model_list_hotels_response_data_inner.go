/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// ListHotelsResponseDataInner struct for ListHotelsResponseDataInner
type ListHotelsResponseDataInner struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	HotelDescription *string `json:"hotelDescription,omitempty"`
	HotelImportantInformation *string `json:"hotelImportantInformation,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Country *string `json:"country,omitempty"`
	City *string `json:"city,omitempty"`
	Latitude *float32 `json:"latitude,omitempty"`
	Longitude *float32 `json:"longitude,omitempty"`
	Address *string `json:"address,omitempty"`
	Zip *string `json:"zip,omitempty"`
}

// NewListHotelsResponseDataInner instantiates a new ListHotelsResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHotelsResponseDataInner() *ListHotelsResponseDataInner {
	this := ListHotelsResponseDataInner{}
	return &this
}

// NewListHotelsResponseDataInnerWithDefaults instantiates a new ListHotelsResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHotelsResponseDataInnerWithDefaults() *ListHotelsResponseDataInner {
	this := ListHotelsResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ListHotelsResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListHotelsResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetHotelDescription returns the HotelDescription field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetHotelDescription() string {
	if o == nil || isNil(o.HotelDescription) {
		var ret string
		return ret
	}
	return *o.HotelDescription
}

// GetHotelDescriptionOk returns a tuple with the HotelDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetHotelDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.HotelDescription) {
    return nil, false
	}
	return o.HotelDescription, true
}

// HasHotelDescription returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasHotelDescription() bool {
	if o != nil && !isNil(o.HotelDescription) {
		return true
	}

	return false
}

// SetHotelDescription gets a reference to the given string and assigns it to the HotelDescription field.
func (o *ListHotelsResponseDataInner) SetHotelDescription(v string) {
	o.HotelDescription = &v
}

// GetHotelImportantInformation returns the HotelImportantInformation field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetHotelImportantInformation() string {
	if o == nil || isNil(o.HotelImportantInformation) {
		var ret string
		return ret
	}
	return *o.HotelImportantInformation
}

// GetHotelImportantInformationOk returns a tuple with the HotelImportantInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetHotelImportantInformationOk() (*string, bool) {
	if o == nil || isNil(o.HotelImportantInformation) {
    return nil, false
	}
	return o.HotelImportantInformation, true
}

// HasHotelImportantInformation returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasHotelImportantInformation() bool {
	if o != nil && !isNil(o.HotelImportantInformation) {
		return true
	}

	return false
}

// SetHotelImportantInformation gets a reference to the given string and assigns it to the HotelImportantInformation field.
func (o *ListHotelsResponseDataInner) SetHotelImportantInformation(v string) {
	o.HotelImportantInformation = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetCurrency() string {
	if o == nil || isNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetCurrencyOk() (*string, bool) {
	if o == nil || isNil(o.Currency) {
    return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasCurrency() bool {
	if o != nil && !isNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *ListHotelsResponseDataInner) SetCurrency(v string) {
	o.Currency = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetCountry() string {
	if o == nil || isNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetCountryOk() (*string, bool) {
	if o == nil || isNil(o.Country) {
    return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasCountry() bool {
	if o != nil && !isNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *ListHotelsResponseDataInner) SetCountry(v string) {
	o.Country = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetCity() string {
	if o == nil || isNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetCityOk() (*string, bool) {
	if o == nil || isNil(o.City) {
    return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasCity() bool {
	if o != nil && !isNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *ListHotelsResponseDataInner) SetCity(v string) {
	o.City = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetLatitude() float32 {
	if o == nil || isNil(o.Latitude) {
		var ret float32
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetLatitudeOk() (*float32, bool) {
	if o == nil || isNil(o.Latitude) {
    return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasLatitude() bool {
	if o != nil && !isNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float32 and assigns it to the Latitude field.
func (o *ListHotelsResponseDataInner) SetLatitude(v float32) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetLongitude() float32 {
	if o == nil || isNil(o.Longitude) {
		var ret float32
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetLongitudeOk() (*float32, bool) {
	if o == nil || isNil(o.Longitude) {
    return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasLongitude() bool {
	if o != nil && !isNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float32 and assigns it to the Longitude field.
func (o *ListHotelsResponseDataInner) SetLongitude(v float32) {
	o.Longitude = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetAddress() string {
	if o == nil || isNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetAddressOk() (*string, bool) {
	if o == nil || isNil(o.Address) {
    return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasAddress() bool {
	if o != nil && !isNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ListHotelsResponseDataInner) SetAddress(v string) {
	o.Address = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *ListHotelsResponseDataInner) GetZip() string {
	if o == nil || isNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHotelsResponseDataInner) GetZipOk() (*string, bool) {
	if o == nil || isNil(o.Zip) {
    return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *ListHotelsResponseDataInner) HasZip() bool {
	if o != nil && !isNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *ListHotelsResponseDataInner) SetZip(v string) {
	o.Zip = &v
}

func (o ListHotelsResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.HotelDescription) {
		toSerialize["hotelDescription"] = o.HotelDescription
	}
	if !isNil(o.HotelImportantInformation) {
		toSerialize["hotelImportantInformation"] = o.HotelImportantInformation
	}
	if !isNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !isNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !isNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !isNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !isNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !isNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !isNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	return json.Marshal(toSerialize)
}

type NullableListHotelsResponseDataInner struct {
	value *ListHotelsResponseDataInner
	isSet bool
}

func (v NullableListHotelsResponseDataInner) Get() *ListHotelsResponseDataInner {
	return v.value
}

func (v *NullableListHotelsResponseDataInner) Set(val *ListHotelsResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListHotelsResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListHotelsResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHotelsResponseDataInner(val *ListHotelsResponseDataInner) *NullableListHotelsResponseDataInner {
	return &NullableListHotelsResponseDataInner{value: val, isSet: true}
}

func (v NullableListHotelsResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHotelsResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



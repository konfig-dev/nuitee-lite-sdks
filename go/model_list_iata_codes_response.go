/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// ListIataCodesResponse struct for ListIataCodesResponse
type ListIataCodesResponse struct {
	Data []ListIataCodesResponseDataInner `json:"data,omitempty"`
}

// NewListIataCodesResponse instantiates a new ListIataCodesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIataCodesResponse() *ListIataCodesResponse {
	this := ListIataCodesResponse{}
	return &this
}

// NewListIataCodesResponseWithDefaults instantiates a new ListIataCodesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIataCodesResponseWithDefaults() *ListIataCodesResponse {
	this := ListIataCodesResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListIataCodesResponse) GetData() []ListIataCodesResponseDataInner {
	if o == nil || isNil(o.Data) {
		var ret []ListIataCodesResponseDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIataCodesResponse) GetDataOk() ([]ListIataCodesResponseDataInner, bool) {
	if o == nil || isNil(o.Data) {
    return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListIataCodesResponse) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []ListIataCodesResponseDataInner and assigns it to the Data field.
func (o *ListIataCodesResponse) SetData(v []ListIataCodesResponseDataInner) {
	o.Data = v
}

func (o ListIataCodesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableListIataCodesResponse struct {
	value *ListIataCodesResponse
	isSet bool
}

func (v NullableListIataCodesResponse) Get() *ListIataCodesResponse {
	return v.value
}

func (v *NullableListIataCodesResponse) Set(val *ListIataCodesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListIataCodesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListIataCodesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIataCodesResponse(val *ListIataCodesResponse) *NullableListIataCodesResponse {
	return &NullableListIataCodesResponse{value: val, isSet: true}
}

func (v NullableListIataCodesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIataCodesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



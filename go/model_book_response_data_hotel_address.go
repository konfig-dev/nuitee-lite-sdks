/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseDataHotelAddress struct for BookResponseDataHotelAddress
type BookResponseDataHotelAddress struct {
	Line1 *string `json:"line1,omitempty"`
	Line2 *string `json:"line2,omitempty"`
	City *string `json:"city,omitempty"`
	PostalCode *string `json:"postalCode,omitempty"`
	Region *string `json:"region,omitempty"`
	Country *string `json:"country,omitempty"`
	CountryName *string `json:"countryName,omitempty"`
}

// NewBookResponseDataHotelAddress instantiates a new BookResponseDataHotelAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseDataHotelAddress() *BookResponseDataHotelAddress {
	this := BookResponseDataHotelAddress{}
	return &this
}

// NewBookResponseDataHotelAddressWithDefaults instantiates a new BookResponseDataHotelAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataHotelAddressWithDefaults() *BookResponseDataHotelAddress {
	this := BookResponseDataHotelAddress{}
	return &this
}

// GetLine1 returns the Line1 field value if set, zero value otherwise.
func (o *BookResponseDataHotelAddress) GetLine1() string {
	if o == nil || isNil(o.Line1) {
		var ret string
		return ret
	}
	return *o.Line1
}

// GetLine1Ok returns a tuple with the Line1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotelAddress) GetLine1Ok() (*string, bool) {
	if o == nil || isNil(o.Line1) {
    return nil, false
	}
	return o.Line1, true
}

// HasLine1 returns a boolean if a field has been set.
func (o *BookResponseDataHotelAddress) HasLine1() bool {
	if o != nil && !isNil(o.Line1) {
		return true
	}

	return false
}

// SetLine1 gets a reference to the given string and assigns it to the Line1 field.
func (o *BookResponseDataHotelAddress) SetLine1(v string) {
	o.Line1 = &v
}

// GetLine2 returns the Line2 field value if set, zero value otherwise.
func (o *BookResponseDataHotelAddress) GetLine2() string {
	if o == nil || isNil(o.Line2) {
		var ret string
		return ret
	}
	return *o.Line2
}

// GetLine2Ok returns a tuple with the Line2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotelAddress) GetLine2Ok() (*string, bool) {
	if o == nil || isNil(o.Line2) {
    return nil, false
	}
	return o.Line2, true
}

// HasLine2 returns a boolean if a field has been set.
func (o *BookResponseDataHotelAddress) HasLine2() bool {
	if o != nil && !isNil(o.Line2) {
		return true
	}

	return false
}

// SetLine2 gets a reference to the given string and assigns it to the Line2 field.
func (o *BookResponseDataHotelAddress) SetLine2(v string) {
	o.Line2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *BookResponseDataHotelAddress) GetCity() string {
	if o == nil || isNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotelAddress) GetCityOk() (*string, bool) {
	if o == nil || isNil(o.City) {
    return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *BookResponseDataHotelAddress) HasCity() bool {
	if o != nil && !isNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *BookResponseDataHotelAddress) SetCity(v string) {
	o.City = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *BookResponseDataHotelAddress) GetPostalCode() string {
	if o == nil || isNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotelAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil || isNil(o.PostalCode) {
    return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *BookResponseDataHotelAddress) HasPostalCode() bool {
	if o != nil && !isNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *BookResponseDataHotelAddress) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *BookResponseDataHotelAddress) GetRegion() string {
	if o == nil || isNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotelAddress) GetRegionOk() (*string, bool) {
	if o == nil || isNil(o.Region) {
    return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *BookResponseDataHotelAddress) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *BookResponseDataHotelAddress) SetRegion(v string) {
	o.Region = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *BookResponseDataHotelAddress) GetCountry() string {
	if o == nil || isNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotelAddress) GetCountryOk() (*string, bool) {
	if o == nil || isNil(o.Country) {
    return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *BookResponseDataHotelAddress) HasCountry() bool {
	if o != nil && !isNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *BookResponseDataHotelAddress) SetCountry(v string) {
	o.Country = &v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *BookResponseDataHotelAddress) GetCountryName() string {
	if o == nil || isNil(o.CountryName) {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotelAddress) GetCountryNameOk() (*string, bool) {
	if o == nil || isNil(o.CountryName) {
    return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *BookResponseDataHotelAddress) HasCountryName() bool {
	if o != nil && !isNil(o.CountryName) {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *BookResponseDataHotelAddress) SetCountryName(v string) {
	o.CountryName = &v
}

func (o BookResponseDataHotelAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Line1) {
		toSerialize["line1"] = o.Line1
	}
	if !isNil(o.Line2) {
		toSerialize["line2"] = o.Line2
	}
	if !isNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !isNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !isNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !isNil(o.CountryName) {
		toSerialize["countryName"] = o.CountryName
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseDataHotelAddress struct {
	value *BookResponseDataHotelAddress
	isSet bool
}

func (v NullableBookResponseDataHotelAddress) Get() *BookResponseDataHotelAddress {
	return v.value
}

func (v *NullableBookResponseDataHotelAddress) Set(val *BookResponseDataHotelAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseDataHotelAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseDataHotelAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseDataHotelAddress(val *BookResponseDataHotelAddress) *NullableBookResponseDataHotelAddress {
	return &NullableBookResponseDataHotelAddress{value: val, isSet: true}
}

func (v NullableBookResponseDataHotelAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseDataHotelAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseDataBookedRoomsInnerRoomType struct for BookResponseDataBookedRoomsInnerRoomType
type BookResponseDataBookedRoomsInnerRoomType struct {
	RoomTypeId *string `json:"roomTypeId,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewBookResponseDataBookedRoomsInnerRoomType instantiates a new BookResponseDataBookedRoomsInnerRoomType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseDataBookedRoomsInnerRoomType() *BookResponseDataBookedRoomsInnerRoomType {
	this := BookResponseDataBookedRoomsInnerRoomType{}
	return &this
}

// NewBookResponseDataBookedRoomsInnerRoomTypeWithDefaults instantiates a new BookResponseDataBookedRoomsInnerRoomType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataBookedRoomsInnerRoomTypeWithDefaults() *BookResponseDataBookedRoomsInnerRoomType {
	this := BookResponseDataBookedRoomsInnerRoomType{}
	return &this
}

// GetRoomTypeId returns the RoomTypeId field value if set, zero value otherwise.
func (o *BookResponseDataBookedRoomsInnerRoomType) GetRoomTypeId() string {
	if o == nil || isNil(o.RoomTypeId) {
		var ret string
		return ret
	}
	return *o.RoomTypeId
}

// GetRoomTypeIdOk returns a tuple with the RoomTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataBookedRoomsInnerRoomType) GetRoomTypeIdOk() (*string, bool) {
	if o == nil || isNil(o.RoomTypeId) {
    return nil, false
	}
	return o.RoomTypeId, true
}

// HasRoomTypeId returns a boolean if a field has been set.
func (o *BookResponseDataBookedRoomsInnerRoomType) HasRoomTypeId() bool {
	if o != nil && !isNil(o.RoomTypeId) {
		return true
	}

	return false
}

// SetRoomTypeId gets a reference to the given string and assigns it to the RoomTypeId field.
func (o *BookResponseDataBookedRoomsInnerRoomType) SetRoomTypeId(v string) {
	o.RoomTypeId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BookResponseDataBookedRoomsInnerRoomType) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataBookedRoomsInnerRoomType) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BookResponseDataBookedRoomsInnerRoomType) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BookResponseDataBookedRoomsInnerRoomType) SetName(v string) {
	o.Name = &v
}

func (o BookResponseDataBookedRoomsInnerRoomType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RoomTypeId) {
		toSerialize["roomTypeId"] = o.RoomTypeId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseDataBookedRoomsInnerRoomType struct {
	value *BookResponseDataBookedRoomsInnerRoomType
	isSet bool
}

func (v NullableBookResponseDataBookedRoomsInnerRoomType) Get() *BookResponseDataBookedRoomsInnerRoomType {
	return v.value
}

func (v *NullableBookResponseDataBookedRoomsInnerRoomType) Set(val *BookResponseDataBookedRoomsInnerRoomType) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseDataBookedRoomsInnerRoomType) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseDataBookedRoomsInnerRoomType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseDataBookedRoomsInnerRoomType(val *BookResponseDataBookedRoomsInnerRoomType) *NullableBookResponseDataBookedRoomsInnerRoomType {
	return &NullableBookResponseDataBookedRoomsInnerRoomType{value: val, isSet: true}
}

func (v NullableBookResponseDataBookedRoomsInnerRoomType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseDataBookedRoomsInnerRoomType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



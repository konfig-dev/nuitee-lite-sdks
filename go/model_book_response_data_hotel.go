/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseDataHotel struct for BookResponseDataHotel
type BookResponseDataHotel struct {
	HotelId *string `json:"hotelId,omitempty"`
	Name *string `json:"name,omitempty"`
	StarRating *int32 `json:"starRating,omitempty"`
	Address *BookResponseDataHotelAddress `json:"address,omitempty"`
	Location *BookResponseDataHotelLocation `json:"location,omitempty"`
}

// NewBookResponseDataHotel instantiates a new BookResponseDataHotel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseDataHotel() *BookResponseDataHotel {
	this := BookResponseDataHotel{}
	return &this
}

// NewBookResponseDataHotelWithDefaults instantiates a new BookResponseDataHotel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataHotelWithDefaults() *BookResponseDataHotel {
	this := BookResponseDataHotel{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *BookResponseDataHotel) GetHotelId() string {
	if o == nil || isNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotel) GetHotelIdOk() (*string, bool) {
	if o == nil || isNil(o.HotelId) {
    return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *BookResponseDataHotel) HasHotelId() bool {
	if o != nil && !isNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *BookResponseDataHotel) SetHotelId(v string) {
	o.HotelId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BookResponseDataHotel) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotel) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BookResponseDataHotel) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BookResponseDataHotel) SetName(v string) {
	o.Name = &v
}

// GetStarRating returns the StarRating field value if set, zero value otherwise.
func (o *BookResponseDataHotel) GetStarRating() int32 {
	if o == nil || isNil(o.StarRating) {
		var ret int32
		return ret
	}
	return *o.StarRating
}

// GetStarRatingOk returns a tuple with the StarRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotel) GetStarRatingOk() (*int32, bool) {
	if o == nil || isNil(o.StarRating) {
    return nil, false
	}
	return o.StarRating, true
}

// HasStarRating returns a boolean if a field has been set.
func (o *BookResponseDataHotel) HasStarRating() bool {
	if o != nil && !isNil(o.StarRating) {
		return true
	}

	return false
}

// SetStarRating gets a reference to the given int32 and assigns it to the StarRating field.
func (o *BookResponseDataHotel) SetStarRating(v int32) {
	o.StarRating = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *BookResponseDataHotel) GetAddress() BookResponseDataHotelAddress {
	if o == nil || isNil(o.Address) {
		var ret BookResponseDataHotelAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotel) GetAddressOk() (*BookResponseDataHotelAddress, bool) {
	if o == nil || isNil(o.Address) {
    return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *BookResponseDataHotel) HasAddress() bool {
	if o != nil && !isNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given BookResponseDataHotelAddress and assigns it to the Address field.
func (o *BookResponseDataHotel) SetAddress(v BookResponseDataHotelAddress) {
	o.Address = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *BookResponseDataHotel) GetLocation() BookResponseDataHotelLocation {
	if o == nil || isNil(o.Location) {
		var ret BookResponseDataHotelLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotel) GetLocationOk() (*BookResponseDataHotelLocation, bool) {
	if o == nil || isNil(o.Location) {
    return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *BookResponseDataHotel) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given BookResponseDataHotelLocation and assigns it to the Location field.
func (o *BookResponseDataHotel) SetLocation(v BookResponseDataHotelLocation) {
	o.Location = &v
}

func (o BookResponseDataHotel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.StarRating) {
		toSerialize["starRating"] = o.StarRating
	}
	if !isNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseDataHotel struct {
	value *BookResponseDataHotel
	isSet bool
}

func (v NullableBookResponseDataHotel) Get() *BookResponseDataHotel {
	return v.value
}

func (v *NullableBookResponseDataHotel) Set(val *BookResponseDataHotel) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseDataHotel) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseDataHotel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseDataHotel(val *BookResponseDataHotel) *NullableBookResponseDataHotel {
	return &NullableBookResponseDataHotel{value: val, isSet: true}
}

func (v NullableBookResponseDataHotel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseDataHotel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseDataCancellation struct for BookResponseDataCancellation
type BookResponseDataCancellation struct {
	Fee *BookResponseDataCancellationFee `json:"fee,omitempty"`
}

// NewBookResponseDataCancellation instantiates a new BookResponseDataCancellation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseDataCancellation() *BookResponseDataCancellation {
	this := BookResponseDataCancellation{}
	return &this
}

// NewBookResponseDataCancellationWithDefaults instantiates a new BookResponseDataCancellation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataCancellationWithDefaults() *BookResponseDataCancellation {
	this := BookResponseDataCancellation{}
	return &this
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *BookResponseDataCancellation) GetFee() BookResponseDataCancellationFee {
	if o == nil || isNil(o.Fee) {
		var ret BookResponseDataCancellationFee
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataCancellation) GetFeeOk() (*BookResponseDataCancellationFee, bool) {
	if o == nil || isNil(o.Fee) {
    return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *BookResponseDataCancellation) HasFee() bool {
	if o != nil && !isNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given BookResponseDataCancellationFee and assigns it to the Fee field.
func (o *BookResponseDataCancellation) SetFee(v BookResponseDataCancellationFee) {
	o.Fee = &v
}

func (o BookResponseDataCancellation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseDataCancellation struct {
	value *BookResponseDataCancellation
	isSet bool
}

func (v NullableBookResponseDataCancellation) Get() *BookResponseDataCancellation {
	return v.value
}

func (v *NullableBookResponseDataCancellation) Set(val *BookResponseDataCancellation) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseDataCancellation) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseDataCancellation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseDataCancellation(val *BookResponseDataCancellation) *NullableBookResponseDataCancellation {
	return &NullableBookResponseDataCancellation{value: val, isSet: true}
}

func (v NullableBookResponseDataCancellation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseDataCancellation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// RetrieveResponseData struct for RetrieveResponseData
type RetrieveResponseData struct {
	BookingId *string `json:"bookingId,omitempty"`
	Status *string `json:"status,omitempty"`
	HotelConfirmationCode *string `json:"hotelConfirmationCode,omitempty"`
	Checkin *string `json:"checkin,omitempty"`
	Checkout *string `json:"checkout,omitempty"`
	BookedRooms []RetrieveResponseDataBookedRoomsInner `json:"bookedRooms,omitempty"`
	GuestInfo *BookResponseDataGuestInfo `json:"guestInfo,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	CancellationPolicies *RetrieveResponseDataCancellationPolicies `json:"cancellationPolicies,omitempty"`
}

// NewRetrieveResponseData instantiates a new RetrieveResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveResponseData() *RetrieveResponseData {
	this := RetrieveResponseData{}
	return &this
}

// NewRetrieveResponseDataWithDefaults instantiates a new RetrieveResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveResponseDataWithDefaults() *RetrieveResponseData {
	this := RetrieveResponseData{}
	return &this
}

// GetBookingId returns the BookingId field value if set, zero value otherwise.
func (o *RetrieveResponseData) GetBookingId() string {
	if o == nil || isNil(o.BookingId) {
		var ret string
		return ret
	}
	return *o.BookingId
}

// GetBookingIdOk returns a tuple with the BookingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseData) GetBookingIdOk() (*string, bool) {
	if o == nil || isNil(o.BookingId) {
    return nil, false
	}
	return o.BookingId, true
}

// HasBookingId returns a boolean if a field has been set.
func (o *RetrieveResponseData) HasBookingId() bool {
	if o != nil && !isNil(o.BookingId) {
		return true
	}

	return false
}

// SetBookingId gets a reference to the given string and assigns it to the BookingId field.
func (o *RetrieveResponseData) SetBookingId(v string) {
	o.BookingId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RetrieveResponseData) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseData) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RetrieveResponseData) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *RetrieveResponseData) SetStatus(v string) {
	o.Status = &v
}

// GetHotelConfirmationCode returns the HotelConfirmationCode field value if set, zero value otherwise.
func (o *RetrieveResponseData) GetHotelConfirmationCode() string {
	if o == nil || isNil(o.HotelConfirmationCode) {
		var ret string
		return ret
	}
	return *o.HotelConfirmationCode
}

// GetHotelConfirmationCodeOk returns a tuple with the HotelConfirmationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseData) GetHotelConfirmationCodeOk() (*string, bool) {
	if o == nil || isNil(o.HotelConfirmationCode) {
    return nil, false
	}
	return o.HotelConfirmationCode, true
}

// HasHotelConfirmationCode returns a boolean if a field has been set.
func (o *RetrieveResponseData) HasHotelConfirmationCode() bool {
	if o != nil && !isNil(o.HotelConfirmationCode) {
		return true
	}

	return false
}

// SetHotelConfirmationCode gets a reference to the given string and assigns it to the HotelConfirmationCode field.
func (o *RetrieveResponseData) SetHotelConfirmationCode(v string) {
	o.HotelConfirmationCode = &v
}

// GetCheckin returns the Checkin field value if set, zero value otherwise.
func (o *RetrieveResponseData) GetCheckin() string {
	if o == nil || isNil(o.Checkin) {
		var ret string
		return ret
	}
	return *o.Checkin
}

// GetCheckinOk returns a tuple with the Checkin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseData) GetCheckinOk() (*string, bool) {
	if o == nil || isNil(o.Checkin) {
    return nil, false
	}
	return o.Checkin, true
}

// HasCheckin returns a boolean if a field has been set.
func (o *RetrieveResponseData) HasCheckin() bool {
	if o != nil && !isNil(o.Checkin) {
		return true
	}

	return false
}

// SetCheckin gets a reference to the given string and assigns it to the Checkin field.
func (o *RetrieveResponseData) SetCheckin(v string) {
	o.Checkin = &v
}

// GetCheckout returns the Checkout field value if set, zero value otherwise.
func (o *RetrieveResponseData) GetCheckout() string {
	if o == nil || isNil(o.Checkout) {
		var ret string
		return ret
	}
	return *o.Checkout
}

// GetCheckoutOk returns a tuple with the Checkout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseData) GetCheckoutOk() (*string, bool) {
	if o == nil || isNil(o.Checkout) {
    return nil, false
	}
	return o.Checkout, true
}

// HasCheckout returns a boolean if a field has been set.
func (o *RetrieveResponseData) HasCheckout() bool {
	if o != nil && !isNil(o.Checkout) {
		return true
	}

	return false
}

// SetCheckout gets a reference to the given string and assigns it to the Checkout field.
func (o *RetrieveResponseData) SetCheckout(v string) {
	o.Checkout = &v
}

// GetBookedRooms returns the BookedRooms field value if set, zero value otherwise.
func (o *RetrieveResponseData) GetBookedRooms() []RetrieveResponseDataBookedRoomsInner {
	if o == nil || isNil(o.BookedRooms) {
		var ret []RetrieveResponseDataBookedRoomsInner
		return ret
	}
	return o.BookedRooms
}

// GetBookedRoomsOk returns a tuple with the BookedRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseData) GetBookedRoomsOk() ([]RetrieveResponseDataBookedRoomsInner, bool) {
	if o == nil || isNil(o.BookedRooms) {
    return nil, false
	}
	return o.BookedRooms, true
}

// HasBookedRooms returns a boolean if a field has been set.
func (o *RetrieveResponseData) HasBookedRooms() bool {
	if o != nil && !isNil(o.BookedRooms) {
		return true
	}

	return false
}

// SetBookedRooms gets a reference to the given []RetrieveResponseDataBookedRoomsInner and assigns it to the BookedRooms field.
func (o *RetrieveResponseData) SetBookedRooms(v []RetrieveResponseDataBookedRoomsInner) {
	o.BookedRooms = v
}

// GetGuestInfo returns the GuestInfo field value if set, zero value otherwise.
func (o *RetrieveResponseData) GetGuestInfo() BookResponseDataGuestInfo {
	if o == nil || isNil(o.GuestInfo) {
		var ret BookResponseDataGuestInfo
		return ret
	}
	return *o.GuestInfo
}

// GetGuestInfoOk returns a tuple with the GuestInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseData) GetGuestInfoOk() (*BookResponseDataGuestInfo, bool) {
	if o == nil || isNil(o.GuestInfo) {
    return nil, false
	}
	return o.GuestInfo, true
}

// HasGuestInfo returns a boolean if a field has been set.
func (o *RetrieveResponseData) HasGuestInfo() bool {
	if o != nil && !isNil(o.GuestInfo) {
		return true
	}

	return false
}

// SetGuestInfo gets a reference to the given BookResponseDataGuestInfo and assigns it to the GuestInfo field.
func (o *RetrieveResponseData) SetGuestInfo(v BookResponseDataGuestInfo) {
	o.GuestInfo = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RetrieveResponseData) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseData) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RetrieveResponseData) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *RetrieveResponseData) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCancellationPolicies returns the CancellationPolicies field value if set, zero value otherwise.
func (o *RetrieveResponseData) GetCancellationPolicies() RetrieveResponseDataCancellationPolicies {
	if o == nil || isNil(o.CancellationPolicies) {
		var ret RetrieveResponseDataCancellationPolicies
		return ret
	}
	return *o.CancellationPolicies
}

// GetCancellationPoliciesOk returns a tuple with the CancellationPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseData) GetCancellationPoliciesOk() (*RetrieveResponseDataCancellationPolicies, bool) {
	if o == nil || isNil(o.CancellationPolicies) {
    return nil, false
	}
	return o.CancellationPolicies, true
}

// HasCancellationPolicies returns a boolean if a field has been set.
func (o *RetrieveResponseData) HasCancellationPolicies() bool {
	if o != nil && !isNil(o.CancellationPolicies) {
		return true
	}

	return false
}

// SetCancellationPolicies gets a reference to the given RetrieveResponseDataCancellationPolicies and assigns it to the CancellationPolicies field.
func (o *RetrieveResponseData) SetCancellationPolicies(v RetrieveResponseDataCancellationPolicies) {
	o.CancellationPolicies = &v
}

func (o RetrieveResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BookingId) {
		toSerialize["bookingId"] = o.BookingId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.HotelConfirmationCode) {
		toSerialize["hotelConfirmationCode"] = o.HotelConfirmationCode
	}
	if !isNil(o.Checkin) {
		toSerialize["checkin"] = o.Checkin
	}
	if !isNil(o.Checkout) {
		toSerialize["checkout"] = o.Checkout
	}
	if !isNil(o.BookedRooms) {
		toSerialize["bookedRooms"] = o.BookedRooms
	}
	if !isNil(o.GuestInfo) {
		toSerialize["guestInfo"] = o.GuestInfo
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.CancellationPolicies) {
		toSerialize["cancellationPolicies"] = o.CancellationPolicies
	}
	return json.Marshal(toSerialize)
}

type NullableRetrieveResponseData struct {
	value *RetrieveResponseData
	isSet bool
}

func (v NullableRetrieveResponseData) Get() *RetrieveResponseData {
	return v.value
}

func (v *NullableRetrieveResponseData) Set(val *RetrieveResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveResponseData(val *RetrieveResponseData) *NullableRetrieveResponseData {
	return &NullableRetrieveResponseData{value: val, isSet: true}
}

func (v NullableRetrieveResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



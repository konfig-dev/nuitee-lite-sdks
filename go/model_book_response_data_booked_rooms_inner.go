/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseDataBookedRoomsInner struct for BookResponseDataBookedRoomsInner
type BookResponseDataBookedRoomsInner struct {
	RoomType *BookResponseDataBookedRoomsInnerRoomType `json:"roomType,omitempty"`
	Adults *int32 `json:"adults,omitempty"`
	Children *int32 `json:"children,omitempty"`
	Rate *BookResponseDataBookedRoomsInnerRate `json:"rate,omitempty"`
}

// NewBookResponseDataBookedRoomsInner instantiates a new BookResponseDataBookedRoomsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseDataBookedRoomsInner() *BookResponseDataBookedRoomsInner {
	this := BookResponseDataBookedRoomsInner{}
	return &this
}

// NewBookResponseDataBookedRoomsInnerWithDefaults instantiates a new BookResponseDataBookedRoomsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataBookedRoomsInnerWithDefaults() *BookResponseDataBookedRoomsInner {
	this := BookResponseDataBookedRoomsInner{}
	return &this
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *BookResponseDataBookedRoomsInner) GetRoomType() BookResponseDataBookedRoomsInnerRoomType {
	if o == nil || isNil(o.RoomType) {
		var ret BookResponseDataBookedRoomsInnerRoomType
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataBookedRoomsInner) GetRoomTypeOk() (*BookResponseDataBookedRoomsInnerRoomType, bool) {
	if o == nil || isNil(o.RoomType) {
    return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *BookResponseDataBookedRoomsInner) HasRoomType() bool {
	if o != nil && !isNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given BookResponseDataBookedRoomsInnerRoomType and assigns it to the RoomType field.
func (o *BookResponseDataBookedRoomsInner) SetRoomType(v BookResponseDataBookedRoomsInnerRoomType) {
	o.RoomType = &v
}

// GetAdults returns the Adults field value if set, zero value otherwise.
func (o *BookResponseDataBookedRoomsInner) GetAdults() int32 {
	if o == nil || isNil(o.Adults) {
		var ret int32
		return ret
	}
	return *o.Adults
}

// GetAdultsOk returns a tuple with the Adults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataBookedRoomsInner) GetAdultsOk() (*int32, bool) {
	if o == nil || isNil(o.Adults) {
    return nil, false
	}
	return o.Adults, true
}

// HasAdults returns a boolean if a field has been set.
func (o *BookResponseDataBookedRoomsInner) HasAdults() bool {
	if o != nil && !isNil(o.Adults) {
		return true
	}

	return false
}

// SetAdults gets a reference to the given int32 and assigns it to the Adults field.
func (o *BookResponseDataBookedRoomsInner) SetAdults(v int32) {
	o.Adults = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *BookResponseDataBookedRoomsInner) GetChildren() int32 {
	if o == nil || isNil(o.Children) {
		var ret int32
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataBookedRoomsInner) GetChildrenOk() (*int32, bool) {
	if o == nil || isNil(o.Children) {
    return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *BookResponseDataBookedRoomsInner) HasChildren() bool {
	if o != nil && !isNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given int32 and assigns it to the Children field.
func (o *BookResponseDataBookedRoomsInner) SetChildren(v int32) {
	o.Children = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *BookResponseDataBookedRoomsInner) GetRate() BookResponseDataBookedRoomsInnerRate {
	if o == nil || isNil(o.Rate) {
		var ret BookResponseDataBookedRoomsInnerRate
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataBookedRoomsInner) GetRateOk() (*BookResponseDataBookedRoomsInnerRate, bool) {
	if o == nil || isNil(o.Rate) {
    return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *BookResponseDataBookedRoomsInner) HasRate() bool {
	if o != nil && !isNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given BookResponseDataBookedRoomsInnerRate and assigns it to the Rate field.
func (o *BookResponseDataBookedRoomsInner) SetRate(v BookResponseDataBookedRoomsInnerRate) {
	o.Rate = &v
}

func (o BookResponseDataBookedRoomsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !isNil(o.Adults) {
		toSerialize["adults"] = o.Adults
	}
	if !isNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !isNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseDataBookedRoomsInner struct {
	value *BookResponseDataBookedRoomsInner
	isSet bool
}

func (v NullableBookResponseDataBookedRoomsInner) Get() *BookResponseDataBookedRoomsInner {
	return v.value
}

func (v *NullableBookResponseDataBookedRoomsInner) Set(val *BookResponseDataBookedRoomsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseDataBookedRoomsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseDataBookedRoomsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseDataBookedRoomsInner(val *BookResponseDataBookedRoomsInner) *NullableBookResponseDataBookedRoomsInner {
	return &NullableBookResponseDataBookedRoomsInner{value: val, isSet: true}
}

func (v NullableBookResponseDataBookedRoomsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseDataBookedRoomsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



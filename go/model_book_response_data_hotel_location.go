/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// BookResponseDataHotelLocation struct for BookResponseDataHotelLocation
type BookResponseDataHotelLocation struct {
	Latitude *float32 `json:"latitude,omitempty"`
	Longitude *float32 `json:"longitude,omitempty"`
}

// NewBookResponseDataHotelLocation instantiates a new BookResponseDataHotelLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResponseDataHotelLocation() *BookResponseDataHotelLocation {
	this := BookResponseDataHotelLocation{}
	return &this
}

// NewBookResponseDataHotelLocationWithDefaults instantiates a new BookResponseDataHotelLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResponseDataHotelLocationWithDefaults() *BookResponseDataHotelLocation {
	this := BookResponseDataHotelLocation{}
	return &this
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *BookResponseDataHotelLocation) GetLatitude() float32 {
	if o == nil || isNil(o.Latitude) {
		var ret float32
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotelLocation) GetLatitudeOk() (*float32, bool) {
	if o == nil || isNil(o.Latitude) {
    return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *BookResponseDataHotelLocation) HasLatitude() bool {
	if o != nil && !isNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float32 and assigns it to the Latitude field.
func (o *BookResponseDataHotelLocation) SetLatitude(v float32) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *BookResponseDataHotelLocation) GetLongitude() float32 {
	if o == nil || isNil(o.Longitude) {
		var ret float32
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResponseDataHotelLocation) GetLongitudeOk() (*float32, bool) {
	if o == nil || isNil(o.Longitude) {
    return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *BookResponseDataHotelLocation) HasLongitude() bool {
	if o != nil && !isNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float32 and assigns it to the Longitude field.
func (o *BookResponseDataHotelLocation) SetLongitude(v float32) {
	o.Longitude = &v
}

func (o BookResponseDataHotelLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !isNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	return json.Marshal(toSerialize)
}

type NullableBookResponseDataHotelLocation struct {
	value *BookResponseDataHotelLocation
	isSet bool
}

func (v NullableBookResponseDataHotelLocation) Get() *BookResponseDataHotelLocation {
	return v.value
}

func (v *NullableBookResponseDataHotelLocation) Set(val *BookResponseDataHotelLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResponseDataHotelLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResponseDataHotelLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResponseDataHotelLocation(val *BookResponseDataHotelLocation) *NullableBookResponseDataHotelLocation {
	return &NullableBookResponseDataHotelLocation{value: val, isSet: true}
}

func (v NullableBookResponseDataHotelLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResponseDataHotelLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



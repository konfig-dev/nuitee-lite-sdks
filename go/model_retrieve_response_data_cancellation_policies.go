/*
Lite API

lite api hotel booking api

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package nuitee

import (
	"encoding/json"
)

// RetrieveResponseDataCancellationPolicies struct for RetrieveResponseDataCancellationPolicies
type RetrieveResponseDataCancellationPolicies struct {
	CancelPolicyInfos []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner `json:"cancelPolicyInfos,omitempty"`
	HotelRemarks NullableString `json:"hotelRemarks,omitempty"`
	RefundableTag *string `json:"refundableTag,omitempty"`
}

// NewRetrieveResponseDataCancellationPolicies instantiates a new RetrieveResponseDataCancellationPolicies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveResponseDataCancellationPolicies() *RetrieveResponseDataCancellationPolicies {
	this := RetrieveResponseDataCancellationPolicies{}
	return &this
}

// NewRetrieveResponseDataCancellationPoliciesWithDefaults instantiates a new RetrieveResponseDataCancellationPolicies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveResponseDataCancellationPoliciesWithDefaults() *RetrieveResponseDataCancellationPolicies {
	this := RetrieveResponseDataCancellationPolicies{}
	return &this
}

// GetCancelPolicyInfos returns the CancelPolicyInfos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveResponseDataCancellationPolicies) GetCancelPolicyInfos() []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner {
	if o == nil {
		var ret []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner
		return ret
	}
	return o.CancelPolicyInfos
}

// GetCancelPolicyInfosOk returns a tuple with the CancelPolicyInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveResponseDataCancellationPolicies) GetCancelPolicyInfosOk() ([]PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner, bool) {
	if o == nil || isNil(o.CancelPolicyInfos) {
    return nil, false
	}
	return o.CancelPolicyInfos, true
}

// HasCancelPolicyInfos returns a boolean if a field has been set.
func (o *RetrieveResponseDataCancellationPolicies) HasCancelPolicyInfos() bool {
	if o != nil && isNil(o.CancelPolicyInfos) {
		return true
	}

	return false
}

// SetCancelPolicyInfos gets a reference to the given []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner and assigns it to the CancelPolicyInfos field.
func (o *RetrieveResponseDataCancellationPolicies) SetCancelPolicyInfos(v []PrebookResponseDataRoomTypesInnerRatesInnerCancellationPoliciesCancelPolicyInfosInner) {
	o.CancelPolicyInfos = v
}

// GetHotelRemarks returns the HotelRemarks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveResponseDataCancellationPolicies) GetHotelRemarks() string {
	if o == nil || isNil(o.HotelRemarks.Get()) {
		var ret string
		return ret
	}
	return *o.HotelRemarks.Get()
}

// GetHotelRemarksOk returns a tuple with the HotelRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveResponseDataCancellationPolicies) GetHotelRemarksOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.HotelRemarks.Get(), o.HotelRemarks.IsSet()
}

// HasHotelRemarks returns a boolean if a field has been set.
func (o *RetrieveResponseDataCancellationPolicies) HasHotelRemarks() bool {
	if o != nil && o.HotelRemarks.IsSet() {
		return true
	}

	return false
}

// SetHotelRemarks gets a reference to the given NullableString and assigns it to the HotelRemarks field.
func (o *RetrieveResponseDataCancellationPolicies) SetHotelRemarks(v string) {
	o.HotelRemarks.Set(&v)
}
// SetHotelRemarksNil sets the value for HotelRemarks to be an explicit nil
func (o *RetrieveResponseDataCancellationPolicies) SetHotelRemarksNil() {
	o.HotelRemarks.Set(nil)
}

// UnsetHotelRemarks ensures that no value is present for HotelRemarks, not even an explicit nil
func (o *RetrieveResponseDataCancellationPolicies) UnsetHotelRemarks() {
	o.HotelRemarks.Unset()
}

// GetRefundableTag returns the RefundableTag field value if set, zero value otherwise.
func (o *RetrieveResponseDataCancellationPolicies) GetRefundableTag() string {
	if o == nil || isNil(o.RefundableTag) {
		var ret string
		return ret
	}
	return *o.RefundableTag
}

// GetRefundableTagOk returns a tuple with the RefundableTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveResponseDataCancellationPolicies) GetRefundableTagOk() (*string, bool) {
	if o == nil || isNil(o.RefundableTag) {
    return nil, false
	}
	return o.RefundableTag, true
}

// HasRefundableTag returns a boolean if a field has been set.
func (o *RetrieveResponseDataCancellationPolicies) HasRefundableTag() bool {
	if o != nil && !isNil(o.RefundableTag) {
		return true
	}

	return false
}

// SetRefundableTag gets a reference to the given string and assigns it to the RefundableTag field.
func (o *RetrieveResponseDataCancellationPolicies) SetRefundableTag(v string) {
	o.RefundableTag = &v
}

func (o RetrieveResponseDataCancellationPolicies) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CancelPolicyInfos != nil {
		toSerialize["cancelPolicyInfos"] = o.CancelPolicyInfos
	}
	if o.HotelRemarks.IsSet() {
		toSerialize["hotelRemarks"] = o.HotelRemarks.Get()
	}
	if !isNil(o.RefundableTag) {
		toSerialize["refundableTag"] = o.RefundableTag
	}
	return json.Marshal(toSerialize)
}

type NullableRetrieveResponseDataCancellationPolicies struct {
	value *RetrieveResponseDataCancellationPolicies
	isSet bool
}

func (v NullableRetrieveResponseDataCancellationPolicies) Get() *RetrieveResponseDataCancellationPolicies {
	return v.value
}

func (v *NullableRetrieveResponseDataCancellationPolicies) Set(val *RetrieveResponseDataCancellationPolicies) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveResponseDataCancellationPolicies) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveResponseDataCancellationPolicies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveResponseDataCancellationPolicies(val *RetrieveResponseDataCancellationPolicies) *NullableRetrieveResponseDataCancellationPolicies {
	return &NullableRetrieveResponseDataCancellationPolicies{value: val, isSet: true}
}

func (v NullableRetrieveResponseDataCancellationPolicies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveResponseDataCancellationPolicies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


